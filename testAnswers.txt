1. What are the four steps of mergesort?
//Mergesort is a divide and conquer algorithm, first we divide de unsorted list in two half, seconde we divide each half also in half until
we get many arrays whit one element inside, third we merge the elements inside the arrays in to a new array, but this time sorted, fourth 
we compare the first element of the array with the first element of the next array and pass the smalest element in to a new array, then 
proside whit the secon element of the array, and we kip doing this until all the arrays merge in to one sorted array.  

2. Using JavaScript, generate a random number between 50 and 100.
//var randomNumber = math.ceil((Math.random() * 50) + 50)

3. Using Javascript, generate a random number between -100 and 100.
//var randomNumber = Math.ceil((Math.random() * 200) - 100)

4. Write a coin flip function. It should return the string "heads" half the time and the string "tails" the other half

function coinFlip() {
    var coin = Math.ceil((Math.random() * 2))

    function flip() {
        if (coin == 1) {
            return 'Heads';
        } else {
            return 'tails';
        };
        return flip()
    };
   return flip();
}
coinFlip()


5. Re-state the following expression without using negation: !(10 > x)
//10 <= x;

6. Re-state the following expression without using negation: !(a > 10 && b <= 5)
//(a <= 10 && b > 5);

7. Re-state the following expression without repeating variable a: (a && x <= 10) || (a && y < 0)
//(a && x <= 10 || y < 0)

8. Re-state the following expression without negations: !( (a > 10) || (b > 10) || (c > 10) || (isAdmin) )
//!(a > 10) && !(b > 10) && !(c > 10) && !(isAdmin)

9. Write a function which, given a 2-d array of strings, returns the concatenation of all the strings.

function twodconcat(arr) {
    var i = 0;
    var resul = [];


    function addArray(arr) {
        if (arr.length > i) {
            for (var a = 0; a < arr[i].length; a++) {
                resul.push(arr[i][a]);
            };
            i++;
            return addArray(arr);
        };
        return resul
    };
    return addArray(arr);
}
twodconcat([
    [1, 2],
    [3, 4],
    [5, 6],
    [7, 8]
])



10. Write a function which, given a 2-d array and another value x, returns true if x is present in the 2-d array, and false otherwise.
function twodconcat(arr, n) {
    var i = 0;
    var resul = [];

    function addArray(arr, n) {
        if (arr.length > i) {
            for (var a = 0; a < arr[i].length; a++) {
                resul.push(arr[i][a]);
            }
            i++;
            return addArray(arr, n);
        };
        return compar(arr, n)
    };
    return addArray(arr, n);


    function compar(arr, n) {
        for (var k = 0; k < resul.length; k++) {
            if (resul[k] == n) {
                return true
            }

        };
        return false;
    };
};

twodconcat([
    [1, 2],
    [3, 4],
    [5, 6],
    [7, 8]
], 5)


11. Write a function which, given an two sorted arrays of sizes m and n, returns a larger sorted array of size m+n. This function must work in O(m+n) time.
function merge(m, n) {
    var npr = 0;
    var mpr = 0;
    var Output = [];

    while (Output.length < (m.length + n.length)) {
        if (mpr === m.length) {
            Output = Output.concat(n.slice(npr))
        } else if (npr === n.length) {
            Output = Output.concat(m.slice(mpr))
        } else if (m[mpr] < n[npr]) {
            Output.push(m[mpr]);
            mpr++;
        } else if (m[mpr] > n[npr]) {
            Output.push(n[npr]);
            npr++;
        }

    };
    return Output;
};
merge([1, 3, 5, 7], [2, 4, 6])



12. Given the following edge list, draw the graph. Use MS Paint and include the file in your repo.
E = [[1,2], [2,3], [4,5], [2,4], [1,5]  ]





13. Given the following adjacency Matrix, determine whether the graph is directed or undirected and draw it.
M = [
  [0,0,1,0,1],
  [0,0,0,0,1],
  [0,1,0,0,0],
  [0,1,0,0,0],
  [0,0,0,0,1],
]
//directed
14. For exercises 9 and 10, if you assume that n is the size of one side of the matrix, what is the time complexity (Big Oh) of the algorithms you wrote?
//O(n^2)


15. What is the time complexity of the following function?

  function thugPop(arr){
    var ret = [];
    for (var i === 0; i < arr.length; i++){
      if (arr[i] % 15 == 0) ret.push('thugPop');
      else if (arr[i] % 5 == 0) ret.push('thug');
      else if (arr[i] %3 == 0 ) ret.push('pop');
      else ret.push(arr[i]);
    }
    return ret;
  }
//O(n)

16. What is the time complexity of the following function?
  function thugify(schoolList){
    return schoolList.map(function(schoolObj){
      var school = Object.assign({}, schoolObj);
      school.students.forEach(function(student){
        if (Math.random() > 0.5){
          student.lastName += 'dogg';
        }
        else {
          student.firstName = "lil' "+ student.firstName;
        }
      });
    });
  }
//O(n^3)
  
17. What is the time complexity of the following function?
  function countRepeats(strArr){
    var repeats = 0;
    strArr.forEach(function(str, index){
      var currentRepeats = strArr.filter(function(innerStr, idx){
        return (innerStr === str && index != idx)
      });
      if (currentRepeats.length > 0){
        repeats++;
      }
    });
    return repeats;
  }
  //O(logn)


18. What are the main operations of a stack?
//The main operations of a stack are the push method and the pop method


19. What are the main operations of a queue?
//The main operations of a queue are enqueue and dequeue


20. What is the runtime of bubblesort? How does it work?
 The runtime is Ðž(n2).The bubblesort compares each pair of adjacent items and swaps them if they are in the wrong order

21. Create a personal website and upload it so that it is accessible at yourdomain.fvi-grad.com.

i. The website must have your name, contact information, skills, and at least two links to portfolio items you are hosting on fvi-grad.
ii. The website must not be in a subdirectory of the document root. ie. It needs to be accessible by going to yourusername.fvi-grad.com/ without anything after the slash.
iii. You can and should use a template
iv. Include the link to your website in your answers document